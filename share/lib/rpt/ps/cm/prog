#!/bin/sh -
#ident $Header$

PATH=/bin:/usr/bin export PATH

prog=`basename \`dirname $0\``
usage="[-p] [-u|-b]"

filter="cat -"

while getopts pub opt 2>&-
do
	case $opt in
	p)	pflg=y				# use ps(1) rather than PID file
		;;
	u|b)
		uflg=y				# use 'ptree' style output
		;;
	\?)	errflg=y
	esac
done
shift `expr $OPTIND - 1`

[ $errflg ] && { echo usage: $prog $usage >&2; exit 2; }

if [ "$ID" ]
then
	id=$ID
else
	id=`expr "\`id\`" : '[^(]\{1,\}(\([^ ]\{1,\}\))'` 
fi

# ptreefmt:
#   Input: 'ps -H -o pid,args'               Output: 'ptree'
#   ^12345 xxxx                              ^12345 xxxx
#   ^ 2345 abc                               ^   2345 abc
#   ^ 3456   xyz                             ^   3456 xyz
#   ^ 4356   uvw                             ^   4356 uvw
#   ^ 4776     abc                           ^     4776 abc
ptreefmt() {
	awk '
	{
		match($0, /^[ ]*[0-9]+[ ]+/)

		if (RLENGTH == 6) {	# root parent
			print 
			next
		}
		indent = (RLENGTH - 6)/2
		printf("%s%5d %s\n", pad(indent), $1, substr($0, RLENGTH+1))

	}
	function pad(n,  b) {
		b =  ""
		for (i = 0; i < n; i++) 
			b = b "  "
		return b
	}'
}

if [ $uflg ]
then
	filter=ptreefmt
fi
  
[ $QUEUE ] && showqueue=MANAGE || showqueue=QD@ASQK

echo Processes:

UNIX95=1 ps -Hxu $id -o pid,args | sed -n '
/^ *[0-9]\{1,\} FNDSM/ {
	p; n;
	: loop
	/^ *[0-9]\{1,\}   */ {
		s;'$showqueue'.*\(QUEUE="[^"]\{1,\}"\).*;\1;
		p; n;
		b loop
	}
}
/^ *[0-9]\{1,\} sh/ {
	h; n;
	/^ *[0-9]\{1,\}   *FNDLIBR FND CPMGR FNDCPMBR/ {
		s;'$showqueue'.*\(QUEUE="[^"]\{1,\}"\).*;\1;
		H; g; p;
	}
}' | $filter
UNIX95=1 ps -Hxu $id -o ppid,pid,args |
awk '
    $1 == 1 && $3 ~ /FNDLIBR|FNDCRM|INCTM|RCVOLTM|FNDSCH|POXCON|PYUGEN|ARLIBR|PALIBR|INVLIBR/ {
        sub(/^[ ]+1 /, "")
        sub(/ /, "   ")
		if (length("'${QUEUE:-}'")) {
			match($0, /QUEUE="[^"]+"/)
			sub(/MANAGE .*/, substr($0, RSTART, RLENGTH))
		}
        a[n++] = $0
    }
    END {
        if (n) {
            printf("%5d init\n", 1)
            for (i in a)
                print a[i]
        }
    }' | $filter
